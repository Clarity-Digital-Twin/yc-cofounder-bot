[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "yc-matcher"
version = "0.1.0"
description = "YC Coâ€‘Founder Matching bot (HIL paste mode + semi-auto Playwright)"
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = {text = "MIT"}
authors = [{name = "JJ", email = ""}]
dependencies = [
  "openai>=1.101.0",
  "openai-agents>=0.0.7",
  "playwright>=1.45.0",
  "python-dotenv>=1.0.1",
  "pydantic>=2.7.0",
  "streamlit>=1.36.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.0",
  "mypy>=1.10.0",
  "ruff>=0.5.0",
  "pre-commit>=3.7.0",
  "types-requests>=2.32.0.20240712",
]

[project.scripts]
yc-matcher = "yc_matcher.interface.cli.run:main"

[tool.uv]
dev-dependencies = [
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.0",
  "pytest-cov>=6.0.0",
  "mypy>=1.10.0",
  "ruff>=0.5.6",
  "pre-commit>=3.7.0",
  "types-requests>=2.32.0.20240712",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
  "E","F","W",   # pycodestyle/pyflakes
  "I",              # isort (via ruff)
  "UP",             # pyupgrade
  "B",              # flake8-bugbear
]
ignore = [
  "E501",  # allow longer lines where helpful; formatter will handle
]

[tool.ruff.lint.per-file-ignores]
"tests/manual/*.py" = ["E402"]  # dev helpers; import after runtime prints
"tests/unit/test_browser_safety.py" = ["E402"]  # sets env before importing module under test
"scripts/*.py" = ["E402"]  # scripts may need runtime setup before imports

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
show_error_codes = true
pretty = true
exclude = '(^|/)interface/cli/check_cua\.py$'

[[tool.mypy.overrides]]
module = ["streamlit", "playwright.*", "openai", "dotenv"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = """
    -v
    --tb=short
    --strict-markers
    -m 'not integration'
    --cov=src/yc_matcher
    --cov-report=term-missing:skip-covered
    --cov-report=html:.coverage_html
    --cov-branch
    --color=yes
"""
testpaths = ["tests/unit", "tests/integration", "tests/e2e"]
pythonpath = ["src"]
norecursedirs = ["tests/manual", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
markers = [
  "integration: marks tests that require browsers or external UI (deselected by default)",
  "asyncio: marks async tests",
  "slow: marks slow tests",
]
filterwarnings = [
  "ignore:coroutine '.*' was never awaited:RuntimeWarning:unittest.mock",
  "ignore:coroutine '.*' was never awaited:RuntimeWarning:coverage.sqldata",
  "ignore:There is no current event loop:DeprecationWarning:asyncio",
]

[tool.coverage.run]
source = ["src/yc_matcher"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]
precision = 2
show_missing = true
skip_covered = true

[tool.hatch.build.targets.wheel]
packages = ["src/yc_matcher"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=4.1.0",
    "pytest-sugar>=0.9.7",
]
